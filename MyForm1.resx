<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>